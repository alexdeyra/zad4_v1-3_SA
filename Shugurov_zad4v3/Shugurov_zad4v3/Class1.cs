using System;


namespace Shugurov_zad4v3
{
    public class SA
    {
        // Метод m вычисляет общую площадь двух прямоугольников с учетом их пересечения
        public static int m(int x1, int y1, int x2, int y2, int x1d, int y1d, int x2d, int y2d)
        {
            // Определяем минимальные и максимальные координаты первого прямоугольника
            int xmin = Math.Min(x1, x2); // Минимальная x-координата первого прямоугольника
            int xmax = Math.Max(x1, x2); // Максимальная x-координата первого прямоугольника
            int ymin = Math.Min(y1, y2); // Минимальная y-координата первого прямоугольника
            int ymax = Math.Max(y1, y2); // Максимальная y-координата первого прямоугольника

            // Определяем минимальные и максимальные координаты второго прямоугольника
            int xmind = Math.Min(x1d, x2d); // Минимальная x-координата второго прямоугольника
            int xmaxd = Math.Max(x1d, x2d); // Максимальная x-координата второго прямоугольника
            int ymind = Math.Min(y1d, y2d); // Минимальная y-координата второго прямоугольника
            int ymaxd = Math.Max(y1d, y2d); // Максимальная y-координата второго прямоугольника

            // Вычисляем площади обоих прямоугольников
            int S = (xmax - xmin) * (ymax - ymin);   // Площадь первого прямоугольника
            int Sd = (xmaxd - xmind) * (ymaxd - ymind); // Площадь второго прямоугольника

            int result; // Переменная для хранения результата

            // Проверяем, пересекаются ли прямоугольники
            if (xmin < xmax && xmax > xmind && ymin < ymaxd && ymax > ymind)
            {
                // Если пересекаются, вычисляем область пересечения
                int x_min = Math.Max(xmin, xmind); // Максимальная x-координата левой границы пересечения
                int x_max = Math.Min(xmax, xmaxd); // Минимальная x-координата правой границы пересечения
                int y_min = Math.Max(ymin, ymind); // Максимальная y-координата нижней границы пересечения
                int y_max = Math.Min(ymax, ymaxd); // Минимальная y-координата верхней границы пересечения

                // Площадь пересечения
                int P = Math.Max(0, x_max - x_min) * Math.Max(0, y_max - y_min);

                // Общая площадь с учетом пересечения
                result = S + Sd - P;
            }
            else
            {
                // Если прямоугольники не пересекаются, просто складываем их площади
                result = S + Sd;
            }

            return result; // Возвращаем итоговую площадь
        }
    }
}
